int resultsNumber=caf8821ExtractionResults.ResultsDocument.Fields.Length;
int count=0;

while(resultsNumber>count){
	Console.WriteLine("1");
 var fieldValue = caf8821ExtractionResults.ResultsDocument.Fields[count].Values[0].Value;
	Console.WriteLine("2");
	if( (fieldValue.Equals("☐" )) || (fieldValue.Equals("☒"))){
		Console.WriteLine("3");
		fieldValue = fieldValue.Replace("☐","No").Replace("☒","Yes");
		Console.WriteLine(caf8821ExtractionResults.ResultsDocument.Fields[count].Values[0].Value);
	 caf8821ExtractionResults.ResultsDocument.Fields[count].Values[0].Value=fieldValue;
		
	}
	count++;
	}



int resultsNumber=caf8821ExtractionResults.ResultsDocument.Fields.Length;
int count=0;

while(resultsNumber>count){
 string fieldValue = caf8821ExtractionResults.ResultsDocument.Fields(count).Values(0);
	if( fieldValue == "☐" || fieldValue=="☒"){
		fieldValue.Replace("☐","No").Replace("☒","Yes");
	 caf8821ExtractionResults.ResultsDocument.Fields(count).Values(0)=fieldValue;
	}
	
	}


matchedLine = yourLargeString.Split(Environment.NewLine.ToCharArray(), StringSplitOptions.RemoveEmptyEntries).FirstOrDefault(Function(line) line.Contains("your search text"))

var reader = new iText.Kernel.Pdf.PdfReader(pdfPath);
var pdfDoc = new iText.Kernel.Pdf.PdfDocument(reader);

try
{
    var form = iText.Forms.PdfAcroForm.GetAcroForm(pdfDoc, false);
    var xfaForm = form.GetXfaForm();

    if (xfaForm != null)
    {
        var dom = xfaForm.GetDomDocument();
        using (var sw = new System.IO.StringWriter())
        {
            dom.Save(sw);
            xfaXml = sw.ToString();
        }
    }
}
finally
{
    pdfDoc.Close();
    reader.Close();  // <- this is key
}

